name: go1.22+

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  schedule:
    # Runs at 16:05 UTC on day-of-month 1 (Every day-of-month 1 at AM 01:05 JST, my time)
    # See: https://crontab.guru/
    - cron: '5 16 1 * *'

env:
  PATH_CACHE: /tmp/docker-img-arch

jobs:
  go:
    name: Run tests on Go via container
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Create image tag
        uses: KEINOS/gh-action-hash-for-cache@main
        id: imagetag
        with:
            path: |
              './.github/Dockerfile'
              './.github/docker-compose.yml'
            variant: $(TZ=UTC-9 date '+%Y%m')

      - name: Cache or restore image archive
        id: cache
        uses: actions/cache@v4
        with:
          path: ${{ env.PATH_CACHE }}
          key: ${{ steps.imagetag.outputs.hash }}

      - name: Load Docker images if exist
        if: steps.cache.outputs.cache-hit == 'true'
        run: |
          docker load --input ${{ steps.imagetag.outputs.hash }}/github_v1_22_1.tar
          docker load --input ${{ steps.imagetag.outputs.hash }}/github_latest_1.tar

      - name: Pull base images if no-exist
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          : # Pull images one-by-one for stability
          docker pull golang:1.22-alpine
          docker pull golang:alpine

      - name: Build Docker images if no-exists
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p ${{ steps.imagetag.outputs.hash }}
          : # Build container images
          docker-compose --file ./.github/docker-compose.yml build

      - name: Save built images if no-exists
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          docker save --output ${{ steps.imagetag.outputs.hash }}/github_v1_19_1.tar github_v1_22:latest
          docker save --output ${{ steps.imagetag.outputs.hash }}/github_latest_1.tar github_latest:latest

      - name: Run tests on Go 1.22 (least supported)
        run: docker-compose --file ./.github/docker-compose.yml run v1_22
      - name: Run tests on latest Go
        run: docker-compose --file ./.github/docker-compose.yml run latest
